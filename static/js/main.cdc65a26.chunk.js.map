{"version":3,"sources":["AppContext.tsx","CollectionListItem.tsx","Collection.tsx","Donut.jsx","Stats.tsx","IndexRoute.tsx","App.tsx","DataStore.ts","AppContextProvider.tsx","serviceWorker.ts","index.tsx"],"names":["AppContext","createContext","CollectionListItem","props","percent","toFixed","color","itemBarFillStyle","width","backgroundColor","style","className","onClick","id","onMouseEnter","onMouseLeave","name","count","toLocaleString","Collection","nodes","node","children","sort","a","b","history","useHistory","pathChunks","useLocation","pathname","substr","split","useContext","hoverNode","setHoverNode","onLineItemMouseEnter","onLineItemMouseLeave","getColor","scaleOrdinal","domain","map","d","range","quantize","t","interpolateSpectral","length","reverse","rowRenderer","index","undefined","key","type","console","log","push","join","linkItemPropsFromGraph","height","overscanRowCount","rowCount","rowHeight","Donut","svg","useRef","useEffect","svgElement","data","d3","radius","Math","min","arc","innerRadius","outerRadius","attr","pie","padAngle","value","arcs","bgArc","selectAll","classed","on","event","buildDonut","current","paths","filter","i","transition","duration","mouseover","ref","reduceDirect","next","reduceIndirect","reduce","Stats","Error","child","parent","parentCss","direct","indirect","desc","relationshipDescription","indirectDescription","breadcrumbs","slice","rootNode","store","location","pathNodes","chunks","findById","hover","IndexRoute","selectedNode","App","setRootNode","useState","isLoading","setIsLoading","get","graph","component","firstMatch","match","uuid","dt","Date","getTime","replace","c","r","random","floor","toString","graphFromCliGraph","collection","idx","source","total","endsWith","Object","values","calculatedCollection","process","root","newRoot","cliGraphToGraph","queue","shift","newArchiveNodes","parentArchive","childArchive","splice","newEntries","entries","forEach","addArchive","DataStore","nodesById","this","fetch","json","fetchedData","error","React","AppContextProvider","setSelectedNode","Provider","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cdc65a26.chunk.js","sourcesContent":["import DataStore from './DataStore';\nimport {createContext} from 'react';\nimport {Models} from './types';\n\ntype Graph = Models.Graph;\n\ntype AppContextType = {\n  rootNode: null|Graph,\n  setRootNode: (node: null|Graph) => void,\n  hoverNode: null|string,\n  setHoverNode: (node: null|string) => void,\n  store: DataStore,\n};\n\nconst AppContext = createContext<AppContextType>({} as AppContextType);\n\nexport default AppContext;\n","import * as React from \"react\";\n\nexport type Props = {\n  color?: string,\n  count?: number,\n  className?: string|null,\n  onClick?: (id: string) => void,\n  onMouseEnter?: (id: string) => void,\n  onMouseLeave?: (id: string) => void,\n  id: string,\n  name: string,\n  percent: number,\n  style?: any,\n};\n\nfunction CollectionListItem(props: Props) {\n  const percent = (props.percent * 100).toFixed(2);\n\n  const color = props.color || \"black\";\n  const onClick = () => props.onClick?.(props.id);\n  const onMouseEnter = () => props.onMouseEnter?.(props.id);\n  const onMouseLeave = () => props.onMouseLeave?.(props.id);\n  const itemBarFillStyle = {width: `${percent}%`, backgroundColor: color};\n  const style = {backgroundColor: color};\n\n  const className = props.className == null\n    ? \"line-item\"\n    : `line-item ${props.className} `;\n\n  return (\n    <div className={className}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        style={props.style}>\n      <div className=\"line-item_color\" style={style}></div>\n      <div className=\"line-item_name\">{props.name}</div>\n      <div className=\"line-item_bar\">\n        <div className=\"bar\">\n          <div className=\"bar_fill\" style={itemBarFillStyle}></div>\n        </div>\n      </div>\n      <div className=\"line-item_count\">{props.count?.toLocaleString()}</div>\n      <div className=\"line-item_percentage\">{percent}%</div>\n    </div>\n  );\n}\n\nexport default CollectionListItem;\n","import AppContext from './AppContext';\nimport React, {useContext} from 'react';\nimport {AutoSizer, List, WindowScroller} from 'react-virtualized';\nimport CollectionListItem, {Props as CollectionListItemProps} from './CollectionListItem';\nimport {Models} from './types';\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {scaleOrdinal, quantize, interpolateSpectral} from \"d3\";\nimport 'react-virtualized/styles.css';\n\ntype Graph = Models.Graph;\n\nfunction linkItemPropsFromGraph(node: Graph): CollectionListItemProps {\n  const {name, id, percent, count} = node;\n  return {name, id, count, percent};\n}\n\nfunction Collection(props: {node: Graph}) {\n  const data = props.node.children;\n  const nodes =\n    data.sort((a: Graph, b: Graph) => b.count - a.count);\n\n  const history = useHistory();\n  const location = useLocation();\n  const pathChunks = location.pathname.substr(1).split('/');\n  const {hoverNode, setHoverNode} = useContext(AppContext);\n  const onLineItemMouseEnter = (id: string|null) => {setHoverNode(id)};\n  const onLineItemMouseLeave = (id: string|null) => {setHoverNode(null)};\n\n  // FIXME: move to global state\n  const getColor = scaleOrdinal()\n    .domain(nodes.map(d => d.name))\n    .range(quantize(t => interpolateSpectral(t * 0.8 + 0.1), nodes.length).reverse())\n\n  const rowRenderer = (props: {\n    key: string,          // Unique key within array of rows\n    index: number,        // Index of row within collection\n    isScrolling: boolean, // The List is currently being scrolled\n    isVisible: boolean,   // This row is visible within the List (eg it is not an overscanned row)\n    style: any,           // Style object to be applied to row (to position it)\n  }) => {\n    const node = nodes[props.index];\n    const className = node.id === hoverNode\n      ? \"line-item--hover\"\n      : undefined;\n    const color = getColor(node.name);\n    const onLineItemClick = () => {\n      if (node.type === \"HTML\") return;\n      if (pathChunks[0] !== \"\") {\n        console.log(pathChunks);\n        history.push(`/${pathChunks.join(\"/\")}/${node.id}`);\n      } else {\n        history.push(node.id);\n      }\n    };\n\n    return (\n      <CollectionListItem key={props.key}\n                          color={color as string}\n                          className={className}\n                          onClick={onLineItemClick}\n                          onMouseEnter={onLineItemMouseEnter}\n                          onMouseLeave={onLineItemMouseLeave}\n                          style={props.style}\n                          {...linkItemPropsFromGraph(node)}/>\n    );\n  };\n\n\n  return (\n    <AutoSizer>\n      {({width, height}) => (\n        <div>\n          <List\n            height={height}\n            overscanRowCount={2}\n            rowCount={nodes.length}\n            rowHeight={41}\n            rowRenderer={rowRenderer}\n            width={width} />\n        </div>\n      )}\n    </AutoSizer>\n  );\n}\n\nexport default Collection;\n","import AppContext from './AppContext';\nimport {useHistory} from 'react-router-dom';\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport * as d3 from \"d3\";\n\nfunction Donut(props) {\n  const svg = useRef(null);\n  const {hoverNode, setHoverNode} = useContext(AppContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    const onClick = (id) => history.push(id);\n    buildDonut(svg.current,\n      props.node.children.map(({name, count, id}) => ({name, id, value: count})), onClick,\n      setHoverNode);\n  }, [props.node, setHoverNode, history]);\n\n  useEffect(() => {\n    mouseover(svg.current, hoverNode);\n  }, [hoverNode]);\n\n  return (<svg ref={svg}></svg>);\n}\n\nfunction mouseover(svgElement, id) {\n  const paths = d3.select(svgElement)\n    .selectAll(\".arcs\");\n\n  if (id !== null) {\n    paths.filter((node, i) => node.data.id === id)\n      .transition()\n      .duration('50')\n      .attr('opacity', '1');\n    paths.filter((node, i) => node.data.id !== id)\n      .transition()\n      .duration('50')\n      .attr('opacity', '.65');\n  } else {\n    paths.transition()\n      .duration('50')\n      .attr('opacity', '1');\n  }\n}\n\nfunction buildDonut(svgElement, data, onClick, setHoverNode) {\n  const color = d3.scaleOrdinal()\n    .domain(data.map(d => d.name))\n    .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse())\n\n  const width = 400;\n  const height = 400;\n  const radius = Math.min(width, height) / 2;\n\n  const arc = d3.arc()\n    .innerRadius(radius * 0.57)\n    .outerRadius(radius - 1);\n\n  const svg = d3.select(svgElement)\n      .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n\n  const pie = d3.pie()\n    .padAngle(0.005)\n    .sort(null)\n    .value(d => d.value);\n\n  const arcs = pie(data);\n  const bgArc = pie([{value: 100}]);\n\n  svg.selectAll('path')\n    .data(bgArc)\n    .join(\"path\")\n    .attr(\"fill\", \"ghostwhite\")\n    .attr(\"stroke\", \"lightgray\")\n    .attr(\"d\", arc);\n\n  const paths = svg.selectAll(\".arcs\")\n    .data(arcs)\n    .join(\"path\")\n    .classed('arcs', true);\n\n  paths\n    .attr(\"fill\", d => color(d.data.name))\n    .attr(\"d\", arc)\n    .on('mouseover', function(event, node) {\n      setHoverNode(node.data.id);\n    })\n    .on('mouseout', function(event, node) {\n      setHoverNode(null);\n    })\n    .on('click', function(event, node) {\n      onClick(node.data.id);\n    });\n}\n\nexport default Donut;\n","import AppContext from './AppContext';\nimport React, {useContext} from 'react';\nimport {Models} from './types';\nimport {RouteComponentProps, useLocation} from 'react-router';\nimport './Stats.css';\n\ntype Graph = Models.Graph;\n\nfunction reduceDirect(count:number, next:Graph):number {\n  if (next.type === \"ARCHIVE\") {\n    return count + next.children.filter(node => node.type === \"HTML\").length;\n  }\n\n  if (next.type === \"HTML\") {\n    return count + 1;\n  }\n\n  return count;\n}\n\nfunction reduceIndirect(count:number, next: Graph): number {\n  if (next.type === \"ARCHIVE\") {\n    return count + next.children.reduce(reduceIndirect, 0);\n  }\n\n  if (next.type === \"CSS\") {\n    return next.count + count;\n  }\n\n  return count;\n}\n\nexport function Stats({nodes}: {nodes: Graph[]}) {\n  if (nodes.length === 0) return null;\n  if (nodes[0].type !== \"ROOT\") throw new Error(\"invariant\");\n  if (nodes.length === 1) {\n    return (\n      <div className=\"Stats\">\n        There are <span className=\"Stats_primary-metric\">{nodes[0].count.toLocaleString()}</span> files analyzed across marxists.org.\n      </div>\n    );\n  }\n  if (nodes.length < 2) throw new Error('invariant');\n\n  const child = nodes[nodes.length - 1];\n  const parent = nodes[nodes.length - 2];\n\n  let i = 1;\n  let parentCss = nodes[i];\n  while (parentCss.type !== \"CSS\" && i < nodes.length) {\n    parentCss = nodes[nodes.length - i];\n    i++;\n  }\n\n  const [relationshipDescription, indirectDescription] = (() => {\n    switch(parent.type) {\n      case \"ARCHIVE\": return [`of ${parentCss.name}'s dependents within ${parent.name}`];\n      case \"CSS\": return [`of ${parent.name}'s dependents across marxists.org`];\n      case \"ROOT\":\n        const direct = child.children.reduce(reduceDirect, 0);\n        const indirect = child.children.reduce(reduceIndirect, 0);\n        let desc = 'of the css across marxists.org';\n        if (indirect > 0) {\n          return [desc, `(${direct.toLocaleString()} directly and ${indirect.toLocaleString()} indirectly)`];\n        }\n        return [desc];\n      default: throw new Error('invariant');\n    }\n  })();\n\n  const percent = (child.percent * 100).toFixed(2);\n  const count = child.count.toLocaleString();\n  const breadcrumbs = nodes.slice(1).map(({name}) => name).join(\" > \");\n  const indirect = indirectDescription == null\n    ? <>&nbsp;</>\n    : indirectDescription;\n\n  return (\n    <div className=\"Stats\">\n      <div className=\"Stats_breadcrumbs\">{breadcrumbs}</div>\n      <div>\n        {child.type === 'ARCHIVE' ? 'contains' : 'constitutes'} <span className=\"Stats_primary-metric\">{percent}%</span> {child.type === 'HTML' ? null : `(${count})`} {relationshipDescription}<br/>{indirect}\n      </div>\n    </div>\n  );\n}\n\nexport default function(props: {className: string}) {\n  const {rootNode, hoverNode, store} = useContext(AppContext);\n  const location = useLocation();\n  if (rootNode == null) return null;\n\n  const pathChunks = (() => {\n    let chunks = location.pathname.substr(1).split('/');\n    return chunks[0] === \"\" ? [] : chunks;\n  })();\n\n  const pathNodes = pathChunks\n    .map(id => store.findById(id))\n    .filter(node => node != null) as Graph[];\n  const nodes = [rootNode, ...pathNodes];\n\n  const hover = hoverNode === null\n    ? null\n    : store.findById(hoverNode);\n  if (hover != null) nodes.push(hover);\n\n  return (\n    <div className={props.className}>\n      <Stats nodes={nodes}/>\n    </div>\n  )\n}\n","import AppContext from './AppContext';\nimport Collection from './Collection';\nimport Donut from './Donut';\nimport React, { useContext} from 'react';\nimport Stats from './Stats';\nimport {Models} from './types';\nimport {RouteComponentProps, useLocation} from 'react-router';\n\ntype Graph = Models.Graph;\n\ntype IndexParams = {\n  id: string,\n  archiveId: string,\n};\n\ntype Props = RouteComponentProps<IndexParams>;\n\nfunction IndexRoute(props: Props) {\n  const { rootNode, store } = useContext(AppContext);\n  const location = useLocation();\n  const pathChunks = location.pathname.substr(1).split('/');\n  const selectedNode = pathChunks[pathChunks.length - 1];\n  const node = selectedNode === \"\"\n    ? rootNode\n    : store.findById(selectedNode);\n\n  return node == null\n    ? null\n    : (<>\n        <div className=\"AppTopViz\">\n          <div style={{width: \"400px\", height: \"400px\"}}>\n            <Donut node={node}/>\n          </div>\n        </div>\n        <Stats className=\"AppTopStats\"/>\n        <div className=\"Header\">\n          <div className=\"Header_name\">\n            Name\n          </div>\n          <div className=\"Header_bar\"></div>\n          <div className=\"Header_count\">\n            Count\n          </div>\n          <div className=\"Header_percentage\">\n            Percent\n          </div>\n        </div>\n        <div className=\"AppList\">\n          {node == null ? null : <Collection node={node}/>}\n        </div>\n      </>);\n}\n\nexport default IndexRoute;\n","import AppContext from './AppContext';\nimport IndexRoute from './IndexRoute';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Switch, Route, } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  const { setRootNode, store } = useContext(AppContext);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // this needs to be useEffect\n  useEffect(() => {\n    if (!isLoading) return;\n    (async () => {\n      const graph = await store.get();\n      setIsLoading(false);\n      setRootNode(graph);\n    })();\n  });\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        {isLoading ? \"loading...\" : <Route component={IndexRoute}/>}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {Models, CliGraph} from './types';\n\ntype Graph = Models.Graph;\n\nfunction firstMatch(match: null|string[]): null|string {\n  return match == null ? null : match[1];\n}\n\nfunction uuid(): string {\n    var dt = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c: string) {\n        var r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c === 'x' ? r :(r & 0x3 | 0x8)).toString(16);\n    });\n    return uuid;\n}\n\nfunction graphFromCliGraph(\n    collection:{total: number, nodes: {[key: string]:Graph}},\n    next: CliGraph,\n    idx: number,\n    source: CliGraph[]): {total: number, nodes: {[key: string]:Graph}} {\n\n  let {total, nodes} = collection;\n\n  const name = next.name;\n  const type = (name.endsWith(\".html\") || name.endsWith(\".htm\"))\n    ? \"HTML\"\n    : name.endsWith(\".css\")\n      ? \"CSS\"\n      : \"ARCHIVE\"\n      ;\n\n  const children = next.children.length > 0\n    ? next.children.reduce(graphFromCliGraph, {total:0, nodes:{}})\n    : {total: 1, nodes: {}};\n\n  nodes[name] = {\n    children: [...Object.values(children.nodes)],\n    count: children.total,\n    id: uuid(),\n    name,\n    percent: 0.00,\n    type,\n  };\n\n  total = total + children.total;\n\n  if (idx === source.length - 1) {\n    const calculatedCollection = Object.values(nodes)\n      .reduce((collection: {[key: string]: Graph}, next: Graph) => {\n        const percent = next.count / total;\n        collection[next.name] = {...next, percent};\n        return collection;\n      }, {});\n    return {total, nodes: calculatedCollection};\n  }\n  return {total, nodes};\n}\n\nfunction addArchive(root: CliGraph): CliGraph {\n  const queue: CliGraph[] = [];\n  queue.push(root);\n  while (queue.length > 0) {\n    const parent = queue.shift();\n    if (parent == null) break;\n\n    let i = 0;\n    let newArchiveNodes: {[key:string]: CliGraph[]} = {};\n    while (i <= parent.children.length) {\n      if (i === parent.children.length) {\n        const newEntries = [...Object.entries(newArchiveNodes)];\n        if (newEntries.length === 0) {\n          break;\n        }\n        newEntries.forEach(([name, children]) => {\n          // console.log(parent, {name, children});\n          parent.children.push({name, children});\n        });\n        newArchiveNodes = {};\n        continue;\n      }\n      const child = parent.children[i];\n\n      const parentArchive = firstMatch(parent.name.match(/archive\\/([^/]*)\\//));\n      const childArchive = firstMatch(child.name.match(/archive\\/([^/]*)\\//));\n      const childIsHtml = child.name.endsWith('.htm') || child.name.endsWith('.html');\n\n      if (childIsHtml && childArchive !== null && childArchive !== parentArchive) {\n        const key = `/archive/${childArchive}/`;\n        if (newArchiveNodes[key] == null) {\n          newArchiveNodes[key] = [];\n        }\n        newArchiveNodes[key].push(child);\n        parent.children.splice(i, 1);\n        continue;\n      }\n\n      queue.push(child);\n      i++;\n    }\n\n  }\n\n  return root;\n}\n\nfunction cliGraphToGraph(root: CliGraph): Graph {\n  const transformed = [root].reduce(graphFromCliGraph, {total: 0, nodes:{}}).nodes;\n  const newRoot = transformed[root.name];\n  if (newRoot == null) throw new Error();\n  newRoot.type = \"ROOT\";\n  console.log(newRoot);\n  return newRoot;\n}\n\nfunction process(root: CliGraph): Graph {\n  let newRoot = addArchive(root);\n  return cliGraphToGraph(newRoot);\n}\n\nclass DataStore {\n  private data: null|Graph = null;\n  private nodesById: {[key:string]: Graph} = {};\n\n  async get(): Promise<Graph> {\n    if (this.data !== null) {\n      return this.data;\n    }\n\n    try {\n      const fetchedData = await (await fetch(\"formatted.json\")).json();\n      this.data = process(fetchedData);\n      this.index();\n      return this.data;\n    } catch (e) {\n      console.error(e);\n      throw e;\n    }\n  }\n\n  private index() {\n    if (this.data == null) return;\n    const queue = [this.data];\n    while (queue.length > 0) {\n      const node = queue.shift();\n      if (node == null) break;\n      this.nodesById[node.id] = node;\n      for (let child of node.children) {\n        queue.push(child);\n      }\n    }\n  }\n\n  findById(id: string): Graph|undefined {\n    return this.nodesById[id];\n  }\n}\n\nexport default DataStore;\n","import * as React from 'react';\nimport DataStore from './DataStore';\nimport AppContext from './AppContext';\nimport {Models} from './types';\n\ntype Graph = Models.Graph;\n\nconst {useState} = React;\n\ntype AppContextProviderProps = {\n  children: React.ReactNode,\n};\n\nconst store = new DataStore();\n\nfunction AppContextProvider(props: AppContextProviderProps) {\n  const [selectedNode, setSelectedNode] = useState<null|string>(null);\n  const [rootNode, setRootNode] = useState<null|Graph>(null);\n  const [hoverNode, setHoverNode] = useState<null|string>(null);\n  const value = {\n    rootNode,\n    setRootNode,\n    selectedNode,\n    setSelectedNode,\n    hoverNode,\n    setHoverNode,\n    store,\n  };\n  return (\n    <AppContext.Provider value={value}>\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n\nexport default AppContextProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AppContextProvider from './AppContextProvider';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </AppContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}